
package challenge09;

public class Test2 {

	public static void main(String[] args) {
		//		【第７回　チャレンジ攻略に向けて】

		//		１．配列の宣言
		//		　・数値配列で初期値が1,3,4,5,7の変数Aを定義※昇順に並んでいます。
		int[] a = { 1, 3, 4, 5, 7 };
		//		　・数値配列で初期値が0,2,3,8,9の変数Bを定義※昇順に並んでいます。
		int[] b = { 0, 2, 3, 8, 9 };
		//		　・数値配列で箱の数が10個の変数Cを定義。
		int[] c = new int[10];

		//		２．配列の表示
		//		　・配列Aの5番目の値を表示する。
		System.out.println(a[4]);
		//		　・int型変数idxを定義し3を設定。
		int idx = 3;
		//		　・変数idxの値（番号)に対応する配列Bを表示する。
		System.out.println(b[idx]);
		//	　・配列Cの内容をループしながら全て表示する
		for (int i = 0; i < c.length; i++) {//konohennOK
			System.out.println(c[i]);
		}
		//		３．配列から配列格納１
		//		　・配列Cの箱数分ループしながら次の処理を行う。
		//		　　・変数Cの0番目から配列Aを順番に格納する
		//		　　　イメージ：配列A:,1,3,4,5,7　->　配列C　1,3,4,5,7　※残り5個の箱には何も格納しない。
		//		　　・配列Cへ設定されたを値を表示する。
		for (int i = 0; i < c.length; i++) {
			if (i < a.length) {
				c[i] = a[i];
			}
			System.out.println(c[i]);
		}
		//		４．配列から配列格納２
		//		　・配列Cの箱数分ループしながら次の処理を行う。
		//		　　・配列Cの0番目から配列Aの値を順番に格納する
		//		　　　イメージ：配列A:1,3,4,5,7　->　配列C　1,3,4,5,7
		//		　　・配列Cへ設定されたを値を表示する。
		//		　　・配列Cの5番目から配列Bの配列の値を順番に格納する
		//		　　　イメージ：配列B:0,2,3,8,9　->　配列C　1,3,4,5,7,0,2,3,8,9
		int j = 0;
		for (int i = 0; i < c.length; i++) {
			if (i < a.length) {
				c[i] = a[i];
			} else {

				c[i] = b[j];
				j = j + 1;
			}
			System.out.println(c[i]);
		}
		//		５．配列から配列格納３
		//		　・配列Cの箱数分ループしながら次の処理を行う。
		//		　　・配列Cの0番目に配列A,配列Bの一番小さい値を設定する。
		//		　　　イメージ：配列A:1,3,4,5,7　->　配列C　0　※残り9個の箱には何も格納しない。
		//		　　　　　　　　配列B:0,2,3,8,9　ABの　配列Cを箱数分　１８７
		//		　　・配列Cの該当する配列を表示する。
		//		　　
		for (int i = 0; i < c.length; i++) {
			if (a[0] > b[0]) {
				c[0] = b[0];
			} else {
				c[0] = a[0];
			}
		}

		//		６．配列から配列格納４
		//		　・配列Cの箱数分ループしながら次の処理を行う。
		//		　　・配列Cの0番目に配列A,配列Bの一番小さい値を設定する。
		//		　　・配列Cの1番目に配列A,配列Bの二番目に小さい値を設定する。
		//		　　　イメージ：配列A:1,3,4,5,7　->　配列C　0,1　※残り8個の箱には何も格納しない。
		//		　　　　　　　　配列B:0,2,3,8,9
		//
		//		　　・配列Cの該当する配列を表示する。ヒント　IよりもJ
		int bb = 0;
		int aa = 0;
		for (int i = 0; i < c.length; i++) {
			if (a[aa] > b[bb]) {
				c[0] = b[bb];
				bb = bb + 1;
			} else {
				c[0] = a[aa];
				aa = aa + 1;

			}
		}
		//
		//
		//		【ループ練習課題】
		//
		//		1.逆順に出力
		//		・数値配列で初期値が1,3,9,5,7の配列Aを定義
		int [] aaa = {1,3,9,5,7};
		//		・7,5,9,3,1と表示するループ分を作成
		
		//for or ~~i 10-i loop カウンター　引き算で降順
		//		2.全て加算
		//		・上記配列Aの項目に全て10を加算し格納する。
		//		　　(1,3,9,5,7)->(11,13,19,15,17)
		//
		//		3.置換
		//		・上記配列Aに13が格納されているなら0に変更するループ分を作成
		//		    (11,13,19,15,17)->(11,0,19,15,17)
		//
		//
		//		5.大きな数
		//		・上記配列Aの1番大きな数値を走査するループ分を作成
		//		    (17,15,19,0,11) :19を表示
		//
		//		6.2番目に大きな数
		//		・上記配列Aの2番目に大きな数値を走査するループ分を作成
		//		     (17,15,19,0,11)  :15を表示
		//
		//		7.交互に表示
		//		・数値配列で初期値が4,7,8,9,9の配列Bを定義
		//		配列A,配列Bを交互に表示するループ命令を作成
		//		結果例：
		//		1
		//		4
		//		3
		//		7
		//		9
		//		8
		//		5
		//		9
		//		7
		//		9
		//
	}

}
